const l=(e,r,t)=>{var n=e.createShader(r);if(e.shaderSource(n,t),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS))return n;throw new Error(`Erro ao compilar shader (${r}): `+e.getShaderInfoLog(n))},g=(r,t,...e)=>{if(e.forEach(e=>r.attachShader(t,e)),r.linkProgram(t),!r.getProgramParameter(t,r.LINK_STATUS))throw new Error("ERROR linking program!"+r.getProgramInfoLog(t));if(r.validateProgram(t),r.getProgramParameter(t,r.VALIDATE_STATUS))return t;throw new Error("ERROR validating program!"+r.getprogramInfoLog(t))};const t=["initial","star"];if((async()=>{var e=t.map(e=>`<option value="${e}">${e}</option>`).join(" "),r=document.getElementById("cList");console.log(e),r.innerHTML=e,r.addEventListener("change",function(e){var r=this.options[this.selectedIndex];c(r.value)})})(),location.origin.includes("10001")){const d=new WebSocket("ws://localhost:10001/watch");d.onmessage=e=>{console.log("asdfasdf"),r(o.innerHTML)},d.onopen=e=>{(s=async e=>{try{return await d.send(e),!0}catch(e){return console.error(e),!1}})(o.innerHTML)}}const n=document.getElementById("cContainer"),o=document.getElementById("cTitle"),a=document.getElementById("cText"),i=((e,r,t)=>{const o=document.getElementById(e),a=(e=>{if(!e)throw new Error("Canvas não encontrado");e.style.display="block";e=e.getContext("webgl")||e.getContext("experimental-webgl");if(e)return e;throw new Error("webGL não suportado")})(o);o.width=t*o.clientWidth,o.height=t*o.clientHeight,a.viewport(0,0,o.width,o.height);e=l(a,a.VERTEX_SHADER,` precision mediump float; attribute vec4 vertPosition; varying vec2 Position; void main() { Position = vertPosition.xy; gl_Position = vertPosition; }`),r=r?l(a,a.FRAGMENT_SHADER,r):null;const n=g(a,a.createProgram(),e,r);a.useProgram(n);e=a,r=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,r);a.bufferData(a.ARRAY_BUFFER,new Float32Array([1,1,-1,1,-1,-1,1,-1]),a.STATIC_DRAW);e=a.getAttribLocation(n,"vertPosition");a.vertexAttribPointer(e,2,a.FLOAT,a.FALSE,2*Float32Array.BYTES_PER_ELEMENT,0),a.enableVertexAttribArray(e);const i=(new Date).getTime(),s=[0,0];var c,d;return{draw:(e=i)=>{var r=a.getUniformLocation(n,"Resolution"),r=(a.uniform2fv(r,[o.width,o.height]),a.getUniformLocation(n,"Time")),r=(a.uniform1f(r,i-e),a.getUniformLocation(n,"Mouse"));a.uniform2fv(r,s),a.drawArrays(a.TRIANGLE_FAN,0,4)},destroy:()=>{return e=a,r=o,t=r.id,(n=r.parentNode).removeChild(r),(r=document.createElement("canvas")).style.display="none",r.id=t,n.prepend(r),e.bindBuffer(e.ARRAY_BUFFER,null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.bindRenderbuffer(e.RENDERBUFFER,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteProgram(program),e.deleteShader(fragmentShader),e.deleteShader(vertexShader),e.deleteBuffer(vertexBufferObject),void(e.canvas.width=e.canvas.height=1);var e,r,t,n},update:(c=a,d=n,e=>{var e=l(c,c.FRAGMENT_SHADER,e),[r,t]=c.getAttachedShaders(d);c.detachShader(d,t),d=g(c,d,e,r),c.useProgram(d)}),mouse:s,resScale:t,canvas:o,gl:a}})("c",` precision mediump float; uniform float Time; uniform vec2 Resolution; uniform vec2 Mouse; varying vec2 Position; void main() { gl_FragColor = vec4(.0); }`,2);window.setInterval(()=>i.draw((new Date).getTime()),1e3/24),i.canvas.addEventListener("mousemove",e=>{i.mouse[0]=2*i.resScale*e.offsetX/i.canvas.width-1,i.mouse[1]=2*(i.canvas.height-i.resScale*e.offsetY)/i.canvas.height-1});const r=async e=>{try{n.style.display="none";var r=await(await fetch(`fragments/${e}.frag`)).text();return i.update(r),e!==o.innerHTML&&(o.innerHTML=e,a.innerHTML=r,console.log("Shader alterado para "+e)),n.style.display="block",!0}catch(e){return console.error(e),!1}};let s=()=>!1;const c=async e=>await r(e)&&await s(e);c("initial");